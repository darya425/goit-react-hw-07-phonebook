{"version":3,"sources":["Components/Container/Container.js","Components/Layout/Layout.js","Redux/contacts-actions.js","Redux/contacts-selectors.js","Components/Form/Form.js","contactshelf-api.js","Redux/contacts-operations.js","Components/Contact/Contact.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","Redux/contacts-reducer.js","Redux/store.js","index.js"],"names":["Container","children","className","protoTypes","PropTypes","node","isRequired","Layout","protoType","addContact","createAction","name","number","payload","id","shortId","generate","deleteContact","changeFilter","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","allContacts","normalizeFilter","toLowerCase","includes","Form","useState","setName","setNumber","dispatch","useDispatch","contactData","useSelector","nameImputId","numberImputId","handleInputName","e","target","value","reset","onSubmit","preventDefault","newContact","find","contact","alert","contactsActions","htmlFor","type","autoComplete","placeholder","pattern","title","onChange","required","fetchContacts","a","axios","get","data","console","log","defaults","baseURL","Contact","ContactsList","useEffect","contactShelfAPI","length","map","onClick","onDeleteContact","Filter","currentTarget","App","createReducer","_","error","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db68ecb4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nContainer.protoTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from '../Container';\n\nconst Layout = ({ children }) => (\n  <>\n    <Container>{children}</Container>\n  </>\n);\n\nLayout.protoType = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import { createAction } from '@reduxjs/toolkit';\nimport shortId from 'shortid';\n\nexport const addContact = createAction('contact/add', ({ name, number }) => {\n  return {\n    payload: {\n      id: shortId.generate(),\n      name,\n      number,\n    },\n  };\n});\n\nexport const deleteContact = createAction('contact/delete');\nexport const changeFilter = createAction('contact/changeFilter');\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const allContacts = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizeFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport shortId from 'shortid';\nimport * as contactsActions from '../../Redux/contacts-actions';\nimport { getItems } from '../../Redux/contacts-selectors';\n\nimport './Form.scss';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contactData = useSelector(getItems);\n\n  const nameImputId = shortId.generate();\n  const numberImputId = shortId.generate();\n\n  const handleInputName = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = name.toLowerCase();\n    const savedContacts = contactData.find(\n      contact => contact.name.toLowerCase() === newContact,\n    );\n\n    if (savedContacts) {\n      alert(name + ' is already in contacts.');\n      reset();\n      return;\n    }\n\n    dispatch(contactsActions.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <label htmlFor={nameImputId} className=\"name\">\n        Name :\n      </label>\n      <input\n        id={nameImputId}\n        className=\"name_input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        name=\"name\"\n        value={name}\n        placeholder=\"Enter a made up name...\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"You need to click on the letters\"\n        onChange={handleInputName}\n        required\n      />\n      <label htmlFor={numberImputId} className=\"name\">\n        Phone number :\n      </label>\n      <input\n        id={numberImputId}\n        className=\"name_input\"\n        type=\"tel\"\n        autoComplete=\"off\"\n        name=\"number\"\n        value={number}\n        placeholder=\"Enter number 666-66-66...\"\n        pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n        title=\"Do you know what a dash is?\"\n        onChange={handleInputName}\n        required\n      />\n\n      <button className=\"btn-form\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  console.log(data);\r\n  return data;\r\n}\r\n","import * as contactShelfAPI from '../contactshelf-api';\r\nimport * as contactsActions from './contacts-actions';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  try {\r\n    const contacts = await contactShelfAPI.fetchContacts();\r\n    dispatch(contactsActions.fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(contactsActions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Contact.scss';\n\nconst Contact = ({ name, number }) => (\n  <>\n    <span className=\"name-item\">{name}</span>\n    <span className=\"name-item\">{number}</span>\n  </>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import { useEffect } from 'react';\nimport * as contactsOperations from '../../Redux/contacts-operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsActions from '../../Redux/contacts-actions';\nimport { getVisibleContacts } from '../../Redux/contacts-selectors';\nimport './ContactsList.scss';\n\nimport Contact from '../Contact';\n\nconst ContactsList = () => {\n  const contactData = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <>\n      {contactData.length > 0 && (\n        <ul className=\"list\">\n          {contactData.map(({ id, name, number }) => (\n            <li className=\"item\" key={id}>\n              <Contact name={name} number={number} />\n              <button\n                className=\"btn\"\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              ></button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsActions from '../../Redux/contacts-actions';\nimport { getFilter } from '../../Redux/contacts-selectors';\n\nimport './Filter.scss';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"filter-form\">\n      <label className=\"filter-title\">Find contact by name :</label>\n      <input\n        className=\"filter-input\"\n        type=\"text\"\n        value={value}\n        placeholder=\"Find a lost soul...\"\n        onChange={e =>\n          dispatch(contactsActions.changeFilter(e.currentTarget.value))\n        }\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import Layout from './Components/Layout';\nimport Form from './Components/Form';\nimport ContactsList from './Components/ContactsList';\nimport Filter from './Components/Filter';\n\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <Layout>\n      <div className=\"box\">\n        <h1 className=\"title\">Phonebook of non-existent people</h1>\n        <Form />\n      </div>\n\n      <div className=\"box\">\n        <h2 className=\"contact\">Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as contactsActions from './contacts-actions';\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\n\n  [contactsActions.addContact]: (state, { payload }) => [...state, payload],\n\n  [contactsActions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst error = createReducer(null, {\n  [contactsActions.fetchContactsError]: (_, { payload }) => payload,\n  [contactsActions.fetchContactsRequest]: () => null,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  error,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts-reducer';\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './Redux/store';\n\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}